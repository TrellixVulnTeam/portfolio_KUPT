import Vue from 'vue'
import Router from 'vue-router'
import { normalizeURL, decode } from 'ufo'
import { interopDefault } from './utils'
import scrollBehavior from './router.scrollBehavior.js'

const _52786e34 = () => interopDefault(import('../../../pages/about/index.vue' /* webpackChunkName: "pages/about/index" */))
const _5c505007 = () => interopDefault(import('../../../pages/contact/index.vue' /* webpackChunkName: "pages/contact/index" */))
const _1b386ce2 = () => interopDefault(import('../../../pages/news/index.vue' /* webpackChunkName: "pages/news/index" */))
const _6d4ab7e9 = () => interopDefault(import('../../../pages/works/index.vue' /* webpackChunkName: "pages/works/index" */))
const _7aeeac6d = () => interopDefault(import('../../../pages/news/_nid/index.vue' /* webpackChunkName: "pages/news/_nid/index" */))
const _8fb7aa68 = () => interopDefault(import('../../../pages/works/_wid.vue' /* webpackChunkName: "pages/works/_wid" */))
const _a001fa32 = () => interopDefault(import('../../../pages/works/_wid.vue/index.vue' /* webpackChunkName: "pages/works/_wid.vue/index" */))
const _aed8c994 = () => interopDefault(import('../../../pages/index.vue' /* webpackChunkName: "pages/index" */))

const emptyFn = () => {}

Vue.use(Router)

export const routerOptions = {
  mode: 'history',
  base: '/portfolio/',
  linkActiveClass: 'nuxt-link-active',
  linkExactActiveClass: 'nuxt-link-exact-active',
  scrollBehavior,

  routes: [{
    path: "/about",
    component: _52786e34,
    name: "about"
  }, {
    path: "/contact",
    component: _5c505007,
    name: "contact"
  }, {
    path: "/news",
    component: _1b386ce2,
    name: "news"
  }, {
    path: "/works",
    component: _6d4ab7e9,
    name: "works"
  }, {
    path: "/news/:nid",
    component: _7aeeac6d,
    name: "news-nid"
  }, {
    path: "/works/:wid",
    component: _8fb7aa68,
    name: "works-wid"
  }, {
    path: "/works/:wid.vue",
    component: _a001fa32,
    name: "works-wid.vue"
  }, {
    path: "/",
    component: _aed8c994,
    name: "index"
  }],

  fallback: false
}

export function createRouter (ssrContext, config) {
  const base = (config._app && config._app.basePath) || routerOptions.base
  const router = new Router({ ...routerOptions, base  })

  // TODO: remove in Nuxt 3
  const originalPush = router.push
  router.push = function push (location, onComplete = emptyFn, onAbort) {
    return originalPush.call(this, location, onComplete, onAbort)
  }

  const resolve = router.resolve.bind(router)
  router.resolve = (to, current, append) => {
    if (typeof to === 'string') {
      to = normalizeURL(to)
    }
    return resolve(to, current, append)
  }

  return router
}
